// Copyright 2017 The UNIC Project Developers.
//
// See the COPYRIGHT file at the top-level directory of this distribution.
//
// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or
// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license
// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your
// option. This file may not be copied, modified, or distributed
// except according to those terms.

pub mod tables;

use std::fs::{self, File};
use std::io::Write;
use std::path::{Path, PathBuf};

pub fn capitalize(str: &str) -> String {
    let mut chars = str.chars();
    match chars.next() {
        None => String::new(),
        Some(ch) => ch.to_uppercase().collect::<String>() + chars.as_str(),
    }
}

pub fn clean_dir(path: &str) -> PathBuf {
    println!("");
    println!("    Clean up dir: = {}", path);
    let dir = PathBuf::from(path);
    if fs::metadata(&dir).is_ok() {
        fs::remove_dir_all(&dir).unwrap();
    }
    fs::create_dir_all(&dir).unwrap();
    dir
}

// TODO: Add auto-signing here, to prevent accidental changes to auto-gened data tables.
pub fn write(dir: &Path, filename: &str, contents: &str) {
    /// The standard auto-generated source disclaimer.
    const PREAMBLE: &str = "// WARNING: Auto-generated by the `unic-gen` crate.\n\
                            // WARNING: DO NOT EDIT MANUALLY!";

    let path = dir.join(filename);
    println!("    Writing file: > {}", path.display());

    let mut file = File::create(path).unwrap();
    writeln!(file, "{}\n{}", PREAMBLE, contents,).unwrap();
}
